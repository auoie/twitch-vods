// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: copyfrom.go

package sqlvods

import (
	"context"
)

// iteratorForAddManyStreams implements pgx.CopyFromSource.
type iteratorForAddManyStreams struct {
	rows                 []AddManyStreamsParams
	skippedFirstNextCall bool
}

func (r *iteratorForAddManyStreams) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForAddManyStreams) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].LastUpdatedAt,
		r.rows[0].MaxViews,
		r.rows[0].StartTime,
		r.rows[0].StreamerID,
		r.rows[0].StreamID,
		r.rows[0].StreamerLoginAtStart,
	}, nil
}

func (r iteratorForAddManyStreams) Err() error {
	return nil
}

func (q *Queries) AddManyStreams(ctx context.Context, arg []AddManyStreamsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"streams"}, []string{"last_updated_at", "max_views", "start_time", "streamer_id", "stream_id", "streamer_login_at_start"}, &iteratorForAddManyStreams{rows: arg})
}
